function compare(e){console.log(e);for(var t=0;t<e.length;t++){var n=e[t].split("-");n=[n[2],n[1],n[0]].join(""),e[t]=n}var r=[].concat(e).sort();console.log(r.toString()!==e.toString()?"Warning: sorted !== ids":"everything in order!")}for(var assert=require("github:jspm/nodelibs@0.0.2/assert"),nodeuuid=require("../uuid"),uuidjs=require("uuid-js"),libuuid=require("uuid").generate,util=require("github:jspm/nodelibs@0.0.2/util"),exec=require("child_process").exec,os=require("github:jspm/nodelibs@0.0.2/os"),uuidCmd="Darwin"===os.type()?"uuid -1":"uuidgen -t",ids=[];ids.length<1e4;)ids.push(nodeuuid.v1());var max=10;console.log("node-uuid:"),ids=[];for(var i=0;max>i;i++)ids.push(nodeuuid.v1());compare(ids),console.log(""),console.log("uuidjs:"),ids=[];for(var i=0;max>i;i++)ids.push(uuidjs.create(1).toString());compare(ids),console.log(""),console.log("libuuid:"),ids=[];var count=0,last=function(){compare(ids)},cb=function(e,t){return ids.push(t.substring(0,t.length-1)),count++,max>count?next():void last()},next=function(){exec(uuidCmd,cb)};next();
//# sourceMappingURL=jspm_packages/npm/node-uuid@1.4.1/test/compare_v1.js.map