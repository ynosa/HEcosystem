/*global window, global*/
function log(){}function info(){console.log.apply(console,arguments)}function warn(){console.log.apply(console,arguments)}function error(){console.warn.apply(console,arguments)}function time(t){times[t]=Date.now()}function timeEnd(t){var n=times[t];if(!n)throw new Error("No such label: "+t);var e=Date.now()-n;console.log(t+": "+e+"ms")}function trace(){var t=new Error;t.name="Trace",t.message=util.format.apply(null,arguments),console.error(t.stack)}function dir(t){console.log(util.inspect(t)+"\n")}function assert(t){if(!t){var n=slice.call(arguments,1);assert.ok(!1,util.format.apply(null,n))}}var util=require("./util"),assert=require("./assert"),slice=Array.prototype.slice,console,times={};console="undefined"!=typeof global&&global.console?global.console:"undefined"!=typeof window&&window.console?window.console:{};for(var functions=[[log,"log"],[info,"info"],[warn,"warn"],[error,"error"],[time,"time"],[timeEnd,"timeEnd"],[trace,"trace"],[dir,"dir"],[assert,"assert"]],i=0;i<functions.length;i++){var tuple=functions[i],f=tuple[0],name=tuple[1];console[name]||(console[name]=f)}module.exports=console;
//# sourceMappingURL=jspm_packages\github\jspm\nodelibs@0.0.2/console.src.js.map