const test=require("tap").test,zlibA=require("../../zlib"),zlibB=require(".."),crypto=require("crypto");test("zlibA.deflate -> zlibB.inflate",function(t){const e=crypto.randomBytes(1024);zlibA.deflate(e,function(n,r){zlibB.inflate(r,function(n,r){t.same(r,e,"should match"),t.end()})})}),test("zlibB.deflate -> zlibA.inflate",function(t){const e=crypto.randomBytes(1024);zlibB.deflate(e,function(n,r){zlibA.inflate(r,function(n,r){t.same(r,e,"should match"),t.end()})})}),test("zlibB.deflate -> zlibA.inflate (string)",function(t){const e="ohaihihihihihihihihihihihihihihihi";zlibB.deflate(e,function(n,r){zlibA.inflate(r,function(n,r){t.same(r.toString(),e,"should match"),t.end()})})}),test("zlibA.gzip -> zlibB.gunzip",function(t){const e=crypto.randomBytes(1024);zlibA.gzip(e,function(n,r){zlibB.gunzip(r,function(n,r){t.same(r,e,"should match"),t.end()})})}),test("zlibB.gzip -> zlibA.gunzip",function(t){const e=crypto.randomBytes(1024);zlibB.gzip(e,function(n,r){zlibA.gunzip(r,function(n,r){t.same(r,e,"should match"),t.end()})})}),test("zlibB.gzip -> zlibA.gunzip",function(t){const e="lololololoollolololoololololololololololololololololololololol";zlibB.gzip(e,function(n,r){zlibA.gunzip(r,function(n,r){t.same(r.toString(),e,"should match"),t.end()})})});
//# sourceMappingURL=jspm_packages\github\jspm\nodelibs@0.0.2/zlib\test\zlib.test.js.map